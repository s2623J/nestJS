
    NestJS Notes:
    -------------

    Defintion:
        Very similar to Angular
        Includes RxJS (uses Observables)

    Setup:
        Install nest globally: "npm i -g @nestjs/cli"
        Create scaffolding for new app: "nest new nest-todo-app"
        cd into app directory
        Iniialize with: "npm run start:dev" (will auto-refresh on save)
        Navigate to: "localhost:3000" to see "Hello World!"

    CLI:
        Generate modules with: "nest g module <module_name>"
        Generate controller with: "nest g controller <controllers_name>"
        Generate service with: "nest g service <service_name>"

    Controllers:
        Should hold All of the routes (Find under the "@GET" section inside 
            the "@Controller" section)

    Services:
        Contain a "@Injectable()" decorator that indicates that it is built 
            to be injected into other modules and controllers
        
    Models:
        Cannot be auto-generated by CLI 
        Are simple exported interfaces of descibed data types
        Must manually add a "model" directory with a ".model.ts" file

    MongoDB:
        Setup free account
        Setup new project
        Create a DB and an API to that DB
        Connect to the DB with either MongoDB NodeJS Driver, Mongoose, or 
            @nestjs/mongoose npm modules
        Import as described in:
            https://docs.nestjs.com/techniques/mongodb
        Copy and paste connection string within the "MongooseModule.forRoot(" line 
            in the app.module.ts file
        Schema:
            Add "import * as mongoose from 'mongoose'" to the todo.model.ts 
            Add "imports: [MongooseModule.forFeature([{ name: 'Todo', schema: TodoSchema }])]" 
                to todos.module.ts to add models being used by app 
            
            
**  Stopping point: Lesson #22